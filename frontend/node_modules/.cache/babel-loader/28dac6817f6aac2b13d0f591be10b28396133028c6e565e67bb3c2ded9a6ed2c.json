{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brudr\\\\Desktop\\\\anon-ecommerce-website-master\\\\CartLite-E-Commerce-WebSite\\\\frontend\\\\src\\\\components\\\\common\\\\TypingAnimation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingAnimation = ({\n  texts,\n  typingSpeed = 100,\n  deletingSpeed = 50,\n  pauseTime = 2000,\n  resetTrigger\n}) => {\n  _s();\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\n  const [currentText, setCurrentText] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const timeoutRef = useRef(null);\n\n  // Reset animation when component mounts or resetTrigger changes\n  useEffect(() => {\n    setCurrentTextIndex(0);\n    setCurrentText('');\n    setIsDeleting(false);\n    setIsPaused(false);\n  }, [resetTrigger]);\n  useEffect(() => {\n    const currentFullText = texts[currentTextIndex];\n    const animate = () => {\n      if (isPaused) {\n        setIsPaused(false);\n        setIsDeleting(true);\n        return;\n      }\n      if (isDeleting) {\n        if (currentText.length > 0) {\n          setCurrentText(currentText.slice(0, -1));\n        } else {\n          setIsDeleting(false);\n          setCurrentTextIndex(prev => (prev + 1) % texts.length);\n        }\n      } else {\n        if (currentText.length < currentFullText.length) {\n          setCurrentText(currentFullText.slice(0, currentText.length + 1));\n        } else {\n          setIsPaused(true);\n        }\n      }\n    };\n    timeoutRef.current = setTimeout(animate, isDeleting ? deletingSpeed : isPaused ? pauseTime : typingSpeed);\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [currentText, currentTextIndex, isDeleting, isPaused, texts, typingSpeed, deletingSpeed, pauseTime]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"font-bold bg-yellow-300 text-purple-900 px-2 py-1 rounded-full inline-block min-w-[120px] text-center\",\n    children: [currentText, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"animate-pulse\",\n      children: \"|\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingAnimation, \"v3yK1jGLELKoCMY7FpoUTkfWMMw=\");\n_c = TypingAnimation;\nexport default TypingAnimation;\nvar _c;\n$RefreshReg$(_c, \"TypingAnimation\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","TypingAnimation","texts","typingSpeed","deletingSpeed","pauseTime","resetTrigger","_s","currentTextIndex","setCurrentTextIndex","currentText","setCurrentText","isDeleting","setIsDeleting","isPaused","setIsPaused","timeoutRef","currentFullText","animate","length","slice","prev","current","setTimeout","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brudr/Desktop/anon-ecommerce-website-master/CartLite-E-Commerce-WebSite/frontend/src/components/common/TypingAnimation.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst TypingAnimation = ({ texts, typingSpeed = 100, deletingSpeed = 50, pauseTime = 2000, resetTrigger }) => {\n  const [currentTextIndex, setCurrentTextIndex] = useState(0);\n  const [currentText, setCurrentText] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const timeoutRef = useRef(null);\n\n  // Reset animation when component mounts or resetTrigger changes\n  useEffect(() => {\n    setCurrentTextIndex(0);\n    setCurrentText('');\n    setIsDeleting(false);\n    setIsPaused(false);\n  }, [resetTrigger]);\n\n  useEffect(() => {\n    const currentFullText = texts[currentTextIndex];\n\n    const animate = () => {\n      if (isPaused) {\n        setIsPaused(false);\n        setIsDeleting(true);\n        return;\n      }\n\n      if (isDeleting) {\n        if (currentText.length > 0) {\n          setCurrentText(currentText.slice(0, -1));\n        } else {\n          setIsDeleting(false);\n          setCurrentTextIndex((prev) => (prev + 1) % texts.length);\n        }\n      } else {\n        if (currentText.length < currentFullText.length) {\n          setCurrentText(currentFullText.slice(0, currentText.length + 1));\n        } else {\n          setIsPaused(true);\n        }\n      }\n    };\n\n    timeoutRef.current = setTimeout(animate, isDeleting ? deletingSpeed : isPaused ? pauseTime : typingSpeed);\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [currentText, currentTextIndex, isDeleting, isPaused, texts, typingSpeed, deletingSpeed, pauseTime]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <span className=\"font-bold bg-yellow-300 text-purple-900 px-2 py-1 rounded-full inline-block min-w-[120px] text-center\">\n      {currentText}\n      <span className=\"animate-pulse\">|</span>\n    </span>\n  );\n};\n\nexport default TypingAnimation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}