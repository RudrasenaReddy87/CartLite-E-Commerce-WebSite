{"ast":null,"code":"import _objectSpread from\"C:/Users/brudr/Desktop/anon-ecommerce-website-master/CartLite-E-Commerce-WebSite/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const FavoritesContext=/*#__PURE__*/createContext();// Favorites reducer - now stores full product objects\nconst favoritesReducer=(state,action)=>{console.log('Reducer called with action:',action.type,'payload:',action.payload);console.log('Current state:',state);switch(action.type){case'SET_FAVORITES':console.log('Setting favorites to:',action.payload);return _objectSpread(_objectSpread({},state),{},{items:action.payload});case'ADD_TO_FAVORITES':const existingProduct=state.items.find(item=>item.id===action.payload.id);if(existingProduct){console.log('Product already exists, not adding:',action.payload.id);return state;// Product already exists\n}console.log('Adding product to favorites:',action.payload.name,'ID:',action.payload.id);return _objectSpread(_objectSpread({},state),{},{items:[...state.items,action.payload]});case'REMOVE_FROM_FAVORITES':console.log('Removing product from favorites:',action.payload);const filteredItems=state.items.filter(item=>item.id!==action.payload);console.log('Filtered items count:',filteredItems.length);return _objectSpread(_objectSpread({},state),{},{items:filteredItems});case'CLEAR_FAVORITES':console.log('Clearing all favorites');return{items:[]};default:return state;}};// Initial state\nconst initialState={items:[]};export const FavoritesProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(favoritesReducer,initialState);// Load favorites from localStorage on mount\nuseEffect(()=>{const savedFavorites=localStorage.getItem('favorites');console.log('Loading favorites from localStorage:',savedFavorites);if(savedFavorites){try{const favoritesData=JSON.parse(savedFavorites);console.log('Parsed favorites data:',favoritesData);dispatch({type:'SET_FAVORITES',payload:favoritesData});}catch(error){console.error('Error loading favorites from localStorage:',error);}}else{console.log('No saved favorites found in localStorage');}},[]);// Save favorites to localStorage whenever it changes\nuseEffect(()=>{console.log('Saving favorites to localStorage:',state.items);localStorage.setItem('favorites',JSON.stringify(state.items));console.log('Saved to localStorage successfully');},[state.items]);const addToFavorites=product=>{dispatch({type:'ADD_TO_FAVORITES',payload:product});// Trigger notification event\nwindow.dispatchEvent(new CustomEvent('favoriteItemAdded',{detail:{product:product}}));};const removeFromFavorites=productId=>{dispatch({type:'REMOVE_FROM_FAVORITES',payload:productId});};const removeFromFavoritesByProduct=product=>{dispatch({type:'REMOVE_FROM_FAVORITES',payload:product.id});};const clearFavorites=()=>{dispatch({type:'CLEAR_FAVORITES'});};const isFavorite=productId=>{const result=state.items.some(item=>item.id===productId);console.log('isFavorite check for ID:',productId,'Result:',result,'Current items:',state.items);return result;};const toggleFavorite=product=>{console.log('toggleFavorite called with:',product);console.log('Current favorites:',state.items);if(isFavorite(product.id)){console.log('Removing from favorites:',product.id);removeFromFavorites(product.id);}else{console.log('Adding to favorites:',product.name,'ID:',product.id);addToFavorites(product);}console.log('Updated favorites after toggle:',state.items);};const value=_objectSpread(_objectSpread({},state),{},{addToFavorites,removeFromFavorites,clearFavorites,isFavorite,toggleFavorite});return/*#__PURE__*/_jsx(FavoritesContext.Provider,{value:value,children:children});};export const useFavorites=()=>{const context=useContext(FavoritesContext);if(!context){throw new Error('useFavorites must be used within a FavoritesProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsx","_jsx","FavoritesContext","favoritesReducer","state","action","console","log","type","payload","_objectSpread","items","existingProduct","find","item","id","name","filteredItems","filter","length","initialState","FavoritesProvider","_ref","children","dispatch","savedFavorites","localStorage","getItem","favoritesData","JSON","parse","error","setItem","stringify","addToFavorites","product","window","dispatchEvent","CustomEvent","detail","removeFromFavorites","productId","removeFromFavoritesByProduct","clearFavorites","isFavorite","result","some","toggleFavorite","value","Provider","useFavorites","context","Error"],"sources":["C:/Users/brudr/Desktop/anon-ecommerce-website-master/CartLite-E-Commerce-WebSite/frontend/src/context/FavoritesContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst FavoritesContext = createContext();\r\n\r\n// Favorites reducer - now stores full product objects\r\nconst favoritesReducer = (state, action) => {\r\n  console.log('Reducer called with action:', action.type, 'payload:', action.payload);\r\n  console.log('Current state:', state);\r\n\r\n  switch (action.type) {\r\n    case 'SET_FAVORITES':\r\n      console.log('Setting favorites to:', action.payload);\r\n      return {\r\n        ...state,\r\n        items: action.payload\r\n      };\r\n    case 'ADD_TO_FAVORITES':\r\n      const existingProduct = state.items.find(item => item.id === action.payload.id);\r\n      if (existingProduct) {\r\n        console.log('Product already exists, not adding:', action.payload.id);\r\n        return state; // Product already exists\r\n      }\r\n      console.log('Adding product to favorites:', action.payload.name, 'ID:', action.payload.id);\r\n      return {\r\n        ...state,\r\n        items: [...state.items, action.payload]\r\n      };\r\n    case 'REMOVE_FROM_FAVORITES':\r\n      console.log('Removing product from favorites:', action.payload);\r\n      const filteredItems = state.items.filter(item => item.id !== action.payload);\r\n      console.log('Filtered items count:', filteredItems.length);\r\n      return {\r\n        ...state,\r\n        items: filteredItems\r\n      };\r\n    case 'CLEAR_FAVORITES':\r\n      console.log('Clearing all favorites');\r\n      return {\r\n        items: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  items: []\r\n};\r\n\r\nexport const FavoritesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(favoritesReducer, initialState);\r\n\r\n  // Load favorites from localStorage on mount\r\n  useEffect(() => {\r\n    const savedFavorites = localStorage.getItem('favorites');\r\n    console.log('Loading favorites from localStorage:', savedFavorites);\r\n    if (savedFavorites) {\r\n      try {\r\n        const favoritesData = JSON.parse(savedFavorites);\r\n        console.log('Parsed favorites data:', favoritesData);\r\n        dispatch({ type: 'SET_FAVORITES', payload: favoritesData });\r\n      } catch (error) {\r\n        console.error('Error loading favorites from localStorage:', error);\r\n      }\r\n    } else {\r\n      console.log('No saved favorites found in localStorage');\r\n    }\r\n  }, []);\r\n\r\n  // Save favorites to localStorage whenever it changes\r\n  useEffect(() => {\r\n    console.log('Saving favorites to localStorage:', state.items);\r\n    localStorage.setItem('favorites', JSON.stringify(state.items));\r\n    console.log('Saved to localStorage successfully');\r\n  }, [state.items]);\r\n\r\n  const addToFavorites = (product) => {\r\n    dispatch({ type: 'ADD_TO_FAVORITES', payload: product });\r\n\r\n    // Trigger notification event\r\n    window.dispatchEvent(new CustomEvent('favoriteItemAdded', {\r\n      detail: {\r\n        product: product\r\n      }\r\n    }));\r\n  };\r\n\r\n  const removeFromFavorites = (productId) => {\r\n    dispatch({ type: 'REMOVE_FROM_FAVORITES', payload: productId });\r\n  };\r\n\r\n  const removeFromFavoritesByProduct = (product) => {\r\n    dispatch({ type: 'REMOVE_FROM_FAVORITES', payload: product.id });\r\n  };\r\n\r\n  const clearFavorites = () => {\r\n    dispatch({ type: 'CLEAR_FAVORITES' });\r\n  };\r\n\r\n  const isFavorite = (productId) => {\r\n    const result = state.items.some(item => item.id === productId);\r\n    console.log('isFavorite check for ID:', productId, 'Result:', result, 'Current items:', state.items);\r\n    return result;\r\n  };\r\n\r\n  const toggleFavorite = (product) => {\r\n    console.log('toggleFavorite called with:', product);\r\n    console.log('Current favorites:', state.items);\r\n\r\n    if (isFavorite(product.id)) {\r\n      console.log('Removing from favorites:', product.id);\r\n      removeFromFavorites(product.id);\r\n    } else {\r\n      console.log('Adding to favorites:', product.name, 'ID:', product.id);\r\n      addToFavorites(product);\r\n    }\r\n\r\n    console.log('Updated favorites after toggle:', state.items);\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n    clearFavorites,\r\n    isFavorite,\r\n    toggleFavorite\r\n  };\r\n\r\n  return (\r\n    <FavoritesContext.Provider value={value}>\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFavorites = () => {\r\n  const context = useContext(FavoritesContext);\r\n  if (!context) {\r\n    throw new Error('useFavorites must be used within a FavoritesProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}