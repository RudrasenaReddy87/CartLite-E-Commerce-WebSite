{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brudr\\\\Desktop\\\\anon-ecommerce-website-master\\\\anon-ecommerce-react\\\\frontend\\\\src\\\\context\\\\ProductContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\n\n// Product reducer\nconst productReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_PRODUCTS':\n      return {\n        ...state,\n        products: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'SET_CATEGORIES':\n      return {\n        ...state,\n        categories: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'FILTER_PRODUCTS':\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          ...action.payload\n        }\n      };\n    case 'CLEAR_FILTERS':\n      return {\n        ...state,\n        filters: {\n          category: '',\n          priceRange: '',\n          rating: '',\n          search: ''\n        }\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial state\nconst initialState = {\n  products: [],\n  categories: [],\n  loading: true,\n  error: null,\n  filters: {\n    category: '',\n    priceRange: '',\n    rating: '',\n    search: ''\n  }\n};\nexport const ProductProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(productReducer, initialState);\n\n  // Fetch products from API\n  const fetchProducts = async () => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await fetch('http://localhost:5000/api/products');\n      if (!response.ok) {\n        throw new Error('Failed to fetch products');\n      }\n      const data = await response.json();\n      dispatch({\n        type: 'SET_PRODUCTS',\n        payload: data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n    }\n  };\n\n  // Fetch categories from API\n  const fetchCategories = async () => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await fetch('http://localhost:5000/api/categories');\n      if (!response.ok) {\n        throw new Error('Failed to fetch categories');\n      }\n      const data = await response.json();\n      dispatch({\n        type: 'SET_CATEGORIES',\n        payload: data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n    }\n  };\n\n  // Apply filters to products\n  const getFilteredProducts = () => {\n    let filtered = [...state.products];\n    if (state.filters.category) {\n      filtered = filtered.filter(product => product.category === state.filters.category);\n    }\n    if (state.filters.priceRange) {\n      const [min, max] = state.filters.priceRange.split('-').map(Number);\n      filtered = filtered.filter(product => product.price >= min && product.price <= max);\n    }\n    if (state.filters.rating) {\n      filtered = filtered.filter(product => product.rating >= parseInt(state.filters.rating));\n    }\n    if (state.filters.search) {\n      const searchTerm = state.filters.search.toLowerCase();\n      filtered = filtered.filter(product => product.name.toLowerCase().includes(searchTerm) || product.description.toLowerCase().includes(searchTerm));\n    }\n    return filtered;\n  };\n\n  // Update filters\n  const updateFilters = filters => {\n    dispatch({\n      type: 'FILTER_PRODUCTS',\n      payload: filters\n    });\n  };\n  const clearFilters = () => {\n    dispatch({\n      type: 'CLEAR_FILTERS'\n    });\n  };\n\n  // Load data on mount\n  useEffect(() => {\n    fetchProducts();\n    fetchCategories();\n  }, []);\n  const value = {\n    ...state,\n    fetchProducts,\n    fetchCategories,\n    getFilteredProducts,\n    updateFilters,\n    clearFilters\n  };\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = ProductProvider;\nexport const useProducts = () => {\n  _s2();\n  const context = useContext(ProductContext);\n  if (!context) {\n    throw new Error('useProducts must be used within a ProductProvider');\n  }\n  return context;\n};\n_s2(useProducts, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","ProductContext","productReducer","state","action","type","products","payload","loading","error","categories","filters","category","priceRange","rating","search","initialState","ProductProvider","children","_s","dispatch","fetchProducts","response","fetch","ok","Error","data","json","message","fetchCategories","getFilteredProducts","filtered","filter","product","min","max","split","map","Number","price","parseInt","searchTerm","toLowerCase","name","includes","description","updateFilters","clearFilters","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProducts","_s2","context","$RefreshReg$"],"sources":["C:/Users/brudr/Desktop/anon-ecommerce-website-master/anon-ecommerce-react/frontend/src/context/ProductContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst ProductContext = createContext();\r\n\r\n// Product reducer\r\nconst productReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_PRODUCTS':\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'SET_CATEGORIES':\r\n      return {\r\n        ...state,\r\n        categories: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      };\r\n    case 'FILTER_PRODUCTS':\r\n      return {\r\n        ...state,\r\n        filters: { ...state.filters, ...action.payload }\r\n      };\r\n    case 'CLEAR_FILTERS':\r\n      return {\r\n        ...state,\r\n        filters: {\r\n          category: '',\r\n          priceRange: '',\r\n          rating: '',\r\n          search: ''\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  products: [],\r\n  categories: [],\r\n  loading: true,\r\n  error: null,\r\n  filters: {\r\n    category: '',\r\n    priceRange: '',\r\n    rating: '',\r\n    search: ''\r\n  }\r\n};\r\n\r\nexport const ProductProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(productReducer, initialState);\r\n\r\n  // Fetch products from API\r\n  const fetchProducts = async () => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const response = await fetch('http://localhost:5000/api/products');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch products');\r\n      }\r\n      const data = await response.json();\r\n      dispatch({ type: 'SET_PRODUCTS', payload: data.data });\r\n    } catch (error) {\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n    }\r\n  };\r\n\r\n  // Fetch categories from API\r\n  const fetchCategories = async () => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const response = await fetch('http://localhost:5000/api/categories');\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch categories');\r\n      }\r\n      const data = await response.json();\r\n      dispatch({ type: 'SET_CATEGORIES', payload: data.data });\r\n    } catch (error) {\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n    }\r\n  };\r\n\r\n  // Apply filters to products\r\n  const getFilteredProducts = () => {\r\n    let filtered = [...state.products];\r\n\r\n    if (state.filters.category) {\r\n      filtered = filtered.filter(product => product.category === state.filters.category);\r\n    }\r\n\r\n    if (state.filters.priceRange) {\r\n      const [min, max] = state.filters.priceRange.split('-').map(Number);\r\n      filtered = filtered.filter(product => product.price >= min && product.price <= max);\r\n    }\r\n\r\n    if (state.filters.rating) {\r\n      filtered = filtered.filter(product => product.rating >= parseInt(state.filters.rating));\r\n    }\r\n\r\n    if (state.filters.search) {\r\n      const searchTerm = state.filters.search.toLowerCase();\r\n      filtered = filtered.filter(product =>\r\n        product.name.toLowerCase().includes(searchTerm) ||\r\n        product.description.toLowerCase().includes(searchTerm)\r\n      );\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  // Update filters\r\n  const updateFilters = (filters) => {\r\n    dispatch({ type: 'FILTER_PRODUCTS', payload: filters });\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    dispatch({ type: 'CLEAR_FILTERS' });\r\n  };\r\n\r\n  // Load data on mount\r\n  useEffect(() => {\r\n    fetchProducts();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const value = {\r\n    ...state,\r\n    fetchProducts,\r\n    fetchCategories,\r\n    getFilteredProducts,\r\n    updateFilters,\r\n    clearFilters\r\n  };\r\n\r\n  return (\r\n    <ProductContext.Provider value={value}>\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProducts = () => {\r\n  const context = useContext(ProductContext);\r\n  if (!context) {\r\n    throw new Error('useProducts must be used within a ProductProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}