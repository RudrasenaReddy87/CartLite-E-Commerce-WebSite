{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brudr\\\\Desktop\\\\anon-ecommerce-website-master\\\\anon-ecommerce-react\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Cart reducer\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CART':\n      return {\n        ...state,\n        items: action.payload,\n        total: action.payload.reduce((sum, item) => sum + item.price * item.quantity, 0),\n        itemCount: action.payload.reduce((sum, item) => sum + item.quantity, 0)\n      };\n    case 'ADD_ITEM':\n      const existingItem = state.items.find(item => item.productId === action.payload.productId);\n      let newItems;\n      if (existingItem) {\n        newItems = state.items.map(item => item.productId === action.payload.productId ? {\n          ...item,\n          quantity: item.quantity + action.payload.quantity\n        } : item);\n      } else {\n        newItems = [...state.items, {\n          id: Date.now().toString(),\n          productId: action.payload.productId,\n          quantity: action.payload.quantity,\n          addedAt: new Date().toISOString()\n        }];\n      }\n      return {\n        ...state,\n        items: newItems,\n        total: newItems.reduce((sum, item) => sum + item.price * item.quantity, 0),\n        itemCount: newItems.reduce((sum, item) => sum + item.quantity, 0)\n      };\n    case 'UPDATE_ITEM':\n      const updatedItems = state.items.map(item => item.id === action.payload.id ? {\n        ...item,\n        quantity: action.payload.quantity\n      } : item).filter(item => item.quantity > 0);\n      return {\n        ...state,\n        items: updatedItems,\n        total: updatedItems.reduce((sum, item) => sum + item.price * item.quantity, 0),\n        itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\n      };\n    case 'REMOVE_ITEM':\n      const filteredItems = state.items.filter(item => item.id !== action.payload.id);\n      return {\n        ...state,\n        items: filteredItems,\n        total: filteredItems.reduce((sum, item) => sum + item.price * item.quantity, 0),\n        itemCount: filteredItems.reduce((sum, item) => sum + item.quantity, 0)\n      };\n    case 'CLEAR_CART':\n      return {\n        items: [],\n        total: 0,\n        itemCount: 0\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial state\nconst initialState = {\n  items: [],\n  total: 0,\n  itemCount: 0\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  // Load cart from localStorage on mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        const cartData = JSON.parse(savedCart);\n        dispatch({\n          type: 'SET_CART',\n          payload: cartData\n        });\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(state.items));\n  }, [state.items]);\n  const addToCart = (productId, quantity = 1) => {\n    dispatch({\n      type: 'ADD_ITEM',\n      payload: {\n        productId,\n        quantity\n      }\n    });\n  };\n  const updateCartItem = (id, quantity) => {\n    dispatch({\n      type: 'UPDATE_ITEM',\n      payload: {\n        id,\n        quantity\n      }\n    });\n  };\n  const removeFromCart = id => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload: {\n        id\n      }\n    });\n  };\n  const clearCart = () => {\n    dispatch({\n      type: 'CLEAR_CART'\n    });\n  };\n  const value = {\n    ...state,\n    addToCart,\n    updateCartItem,\n    removeFromCart,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","CartContext","cartReducer","state","action","type","items","payload","total","reduce","sum","item","price","quantity","itemCount","existingItem","find","productId","newItems","map","id","Date","now","toString","addedAt","toISOString","updatedItems","filter","filteredItems","initialState","CartProvider","children","_s","dispatch","savedCart","localStorage","getItem","cartData","JSON","parse","error","console","setItem","stringify","addToCart","updateCartItem","removeFromCart","clearCart","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/brudr/Desktop/anon-ecommerce-website-master/anon-ecommerce-react/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\n// Cart reducer\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CART':\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        total: action.payload.reduce((sum, item) => sum + (item.price * item.quantity), 0),\r\n        itemCount: action.payload.reduce((sum, item) => sum + item.quantity, 0)\r\n      };\r\n    case 'ADD_ITEM':\r\n      const existingItem = state.items.find(item => item.productId === action.payload.productId);\r\n      let newItems;\r\n\r\n      if (existingItem) {\r\n        newItems = state.items.map(item =>\r\n          item.productId === action.payload.productId\r\n            ? { ...item, quantity: item.quantity + action.payload.quantity }\r\n            : item\r\n        );\r\n      } else {\r\n        newItems = [...state.items, {\r\n          id: Date.now().toString(),\r\n          productId: action.payload.productId,\r\n          quantity: action.payload.quantity,\r\n          addedAt: new Date().toISOString()\r\n        }];\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        items: newItems,\r\n        total: newItems.reduce((sum, item) => sum + (item.price * item.quantity), 0),\r\n        itemCount: newItems.reduce((sum, item) => sum + item.quantity, 0)\r\n      };\r\n    case 'UPDATE_ITEM':\r\n      const updatedItems = state.items.map(item =>\r\n        item.id === action.payload.id\r\n          ? { ...item, quantity: action.payload.quantity }\r\n          : item\r\n      ).filter(item => item.quantity > 0);\r\n\r\n      return {\r\n        ...state,\r\n        items: updatedItems,\r\n        total: updatedItems.reduce((sum, item) => sum + (item.price * item.quantity), 0),\r\n        itemCount: updatedItems.reduce((sum, item) => sum + item.quantity, 0)\r\n      };\r\n    case 'REMOVE_ITEM':\r\n      const filteredItems = state.items.filter(item => item.id !== action.payload.id);\r\n      return {\r\n        ...state,\r\n        items: filteredItems,\r\n        total: filteredItems.reduce((sum, item) => sum + (item.price * item.quantity), 0),\r\n        itemCount: filteredItems.reduce((sum, item) => sum + item.quantity, 0)\r\n      };\r\n    case 'CLEAR_CART':\r\n      return {\r\n        items: [],\r\n        total: 0,\r\n        itemCount: 0\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  items: [],\r\n  total: 0,\r\n  itemCount: 0\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, initialState);\r\n\r\n  // Load cart from localStorage on mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      try {\r\n        const cartData = JSON.parse(savedCart);\r\n        dispatch({ type: 'SET_CART', payload: cartData });\r\n      } catch (error) {\r\n        console.error('Error loading cart from localStorage:', error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever it changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(state.items));\r\n  }, [state.items]);\r\n\r\n  const addToCart = (productId, quantity = 1) => {\r\n    dispatch({ type: 'ADD_ITEM', payload: { productId, quantity } });\r\n  };\r\n\r\n  const updateCartItem = (id, quantity) => {\r\n    dispatch({ type: 'UPDATE_ITEM', payload: { id, quantity } });\r\n  };\r\n\r\n  const removeFromCart = (id) => {\r\n    dispatch({ type: 'REMOVE_ITEM', payload: { id } });\r\n  };\r\n\r\n  const clearCart = () => {\r\n    dispatch({ type: 'CLEAR_CART' });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    addToCart,\r\n    updateCartItem,\r\n    removeFromCart,\r\n    clearCart\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}