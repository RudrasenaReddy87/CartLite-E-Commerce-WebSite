{"ast":null,"code":"/**\r\n * Advanced Search Utilities for E-commerce\r\n * Features: Fuzzy search, debouncing, relevance scoring, suggestions\r\n */// Fuzzy search algorithm using Levenshtein distance\nexport const levenshteinDistance=(str1,str2)=>{const matrix=[];const len1=str1.length;const len2=str2.length;if(len1===0)return len2;if(len2===0)return len1;// Initialize matrix\nfor(let i=0;i<=len1;i++){matrix[i]=[i];}for(let j=0;j<=len2;j++){matrix[0][j]=j;}// Fill matrix\nfor(let i=1;i<=len1;i++){for(let j=1;j<=len2;j++){const cost=str1[i-1]===str2[j-1]?0:1;matrix[i][j]=Math.min(matrix[i-1][j]+1,// deletion\nmatrix[i][j-1]+1,// insertion\nmatrix[i-1][j-1]+cost// substitution\n);}}return matrix[len1][len2];};// Calculate search relevance score\nexport const calculateRelevanceScore=(product,searchTerm)=>{const term=searchTerm.toLowerCase();let score=0;// Exact name match gets highest score\nif(product.name.toLowerCase()===term){score+=100;}// Name starts with search term\nif(product.name.toLowerCase().startsWith(term)){score+=80;}// Name contains search term\nif(product.name.toLowerCase().includes(term)){score+=60;}// Description contains search term\nif(product.description.toLowerCase().includes(term)){score+=40;}// Category match bonus\nif(product.category.toLowerCase().includes(term)){score+=30;}// Fuzzy matching for typos (allow 1-2 character differences)\nconst nameWords=product.name.toLowerCase().split(' ');const descWords=product.description.toLowerCase().split(' ');nameWords.forEach(word=>{if(word.length>=4){// Only for longer words\nconst distance=levenshteinDistance(word,term);if(distance<=2){score+=Math.max(0,20-distance*5);}}});descWords.forEach(word=>{if(word.length>=4){const distance=levenshteinDistance(word,term);if(distance<=2){score+=Math.max(0,10-distance*3);}}});return score;};// Debounce function for search input\nexport const debounce=(func,wait)=>{let timeout;return function executedFunction(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}const later=()=>{clearTimeout(timeout);func(...args);};clearTimeout(timeout);timeout=setTimeout(later,wait);};};// Get search suggestions based on partial input\nexport const getSearchSuggestions=function(products,searchTerm){let maxSuggestions=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5;if(!searchTerm||searchTerm.length<2)return[];const term=searchTerm.toLowerCase();const suggestions=new Map();products.forEach(product=>{// Check product name\nconst nameWords=product.name.toLowerCase().split(' ');nameWords.forEach(word=>{if(word.startsWith(term)&&word!==term){if(!suggestions.has(word)){suggestions.set(word,{text:word,type:'product',product:product});}}});// Check categories\nif(product.category.toLowerCase().startsWith(term)){if(!suggestions.has(product.category)){suggestions.set(product.category,{text:product.category,type:'category',product:product});}}});return Array.from(suggestions.values()).slice(0,maxSuggestions);};// Enhanced search function with fuzzy matching and scoring\nexport const searchProducts=function(products,searchTerm){let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const{fuzzy=true,minScore=10,maxResults=50,sortByRelevance=true}=options;if(!searchTerm||searchTerm.trim().length===0){return products;}const term=searchTerm.toLowerCase().trim();// Filter products based on search criteria\nlet filteredProducts=products.filter(product=>{const score=calculateRelevanceScore(product,term);return score>=minScore;});// Sort by relevance score if enabled\nif(sortByRelevance){filteredProducts.sort((a,b)=>{const scoreA=calculateRelevanceScore(a,term);const scoreB=calculateRelevanceScore(b,term);return scoreB-scoreA;});}return filteredProducts.slice(0,maxResults);};// Search history management\nexport const searchHistoryUtils={getHistory:()=>{try{const history=localStorage.getItem('searchHistory');return history?JSON.parse(history):[];}catch(error){console.error('Error loading search history:',error);return[];}},addToHistory:searchTerm=>{try{const history=searchHistoryUtils.getHistory();const filteredHistory=history.filter(term=>term!==searchTerm);const updatedHistory=[searchTerm,...filteredHistory].slice(0,10);// Keep last 10 searches\nlocalStorage.setItem('searchHistory',JSON.stringify(updatedHistory));return updatedHistory;}catch(error){console.error('Error saving search history:',error);return[];}},clearHistory:()=>{try{localStorage.removeItem('searchHistory');}catch(error){console.error('Error clearing search history:',error);}}};// Highlight search terms in text\nexport const highlightSearchTerm=(text,searchTerm)=>{if(!searchTerm||!text)return text;const regex=new RegExp(\"(\".concat(searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g,'\\\\$&'),\")\"),'gi');return text.replace(regex,'<mark class=\"bg-yellow-200 px-1 rounded\">$1</mark>');};// Get popular search terms (mock data for demo)\nexport const getPopularSearches=()=>{return['wireless headphones','smart watch','running shoes','casual shirt','gaming mouse','yoga mat','designer handbag','rose gold earrings'];};","map":{"version":3,"names":["levenshteinDistance","str1","str2","matrix","len1","length","len2","i","j","cost","Math","min","calculateRelevanceScore","product","searchTerm","term","toLowerCase","score","name","startsWith","includes","description","category","nameWords","split","descWords","forEach","word","distance","max","debounce","func","wait","timeout","executedFunction","_len","arguments","args","Array","_key","later","clearTimeout","setTimeout","getSearchSuggestions","products","maxSuggestions","undefined","suggestions","Map","has","set","text","type","from","values","slice","searchProducts","options","fuzzy","minScore","maxResults","sortByRelevance","trim","filteredProducts","filter","sort","a","b","scoreA","scoreB","searchHistoryUtils","getHistory","history","localStorage","getItem","JSON","parse","error","console","addToHistory","filteredHistory","updatedHistory","setItem","stringify","clearHistory","removeItem","highlightSearchTerm","regex","RegExp","concat","replace","getPopularSearches"],"sources":["C:/Users/brudr/Desktop/anon-ecommerce-website-master/CartLite-E-Commerce-WebSite/frontend/src/utils/searchUtils.js"],"sourcesContent":["/**\r\n * Advanced Search Utilities for E-commerce\r\n * Features: Fuzzy search, debouncing, relevance scoring, suggestions\r\n */\r\n\r\n// Fuzzy search algorithm using Levenshtein distance\r\nexport const levenshteinDistance = (str1, str2) => {\r\n  const matrix = [];\r\n  const len1 = str1.length;\r\n  const len2 = str2.length;\r\n\r\n  if (len1 === 0) return len2;\r\n  if (len2 === 0) return len1;\r\n\r\n  // Initialize matrix\r\n  for (let i = 0; i <= len1; i++) {\r\n    matrix[i] = [i];\r\n  }\r\n  for (let j = 0; j <= len2; j++) {\r\n    matrix[0][j] = j;\r\n  }\r\n\r\n  // Fill matrix\r\n  for (let i = 1; i <= len1; i++) {\r\n    for (let j = 1; j <= len2; j++) {\r\n      const cost = str1[i - 1] === str2[j - 1] ? 0 : 1;\r\n      matrix[i][j] = Math.min(\r\n        matrix[i - 1][j] + 1,      // deletion\r\n        matrix[i][j - 1] + 1,      // insertion\r\n        matrix[i - 1][j - 1] + cost // substitution\r\n      );\r\n    }\r\n  }\r\n\r\n  return matrix[len1][len2];\r\n};\r\n\r\n// Calculate search relevance score\r\nexport const calculateRelevanceScore = (product, searchTerm) => {\r\n  const term = searchTerm.toLowerCase();\r\n  let score = 0;\r\n\r\n  // Exact name match gets highest score\r\n  if (product.name.toLowerCase() === term) {\r\n    score += 100;\r\n  }\r\n\r\n  // Name starts with search term\r\n  if (product.name.toLowerCase().startsWith(term)) {\r\n    score += 80;\r\n  }\r\n\r\n  // Name contains search term\r\n  if (product.name.toLowerCase().includes(term)) {\r\n    score += 60;\r\n  }\r\n\r\n  // Description contains search term\r\n  if (product.description.toLowerCase().includes(term)) {\r\n    score += 40;\r\n  }\r\n\r\n  // Category match bonus\r\n  if (product.category.toLowerCase().includes(term)) {\r\n    score += 30;\r\n  }\r\n\r\n  // Fuzzy matching for typos (allow 1-2 character differences)\r\n  const nameWords = product.name.toLowerCase().split(' ');\r\n  const descWords = product.description.toLowerCase().split(' ');\r\n\r\n  nameWords.forEach(word => {\r\n    if (word.length >= 4) { // Only for longer words\r\n      const distance = levenshteinDistance(word, term);\r\n      if (distance <= 2) {\r\n        score += Math.max(0, 20 - distance * 5);\r\n      }\r\n    }\r\n  });\r\n\r\n  descWords.forEach(word => {\r\n    if (word.length >= 4) {\r\n      const distance = levenshteinDistance(word, term);\r\n      if (distance <= 2) {\r\n        score += Math.max(0, 10 - distance * 3);\r\n      }\r\n    }\r\n  });\r\n\r\n  return score;\r\n};\r\n\r\n// Debounce function for search input\r\nexport const debounce = (func, wait) => {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\n// Get search suggestions based on partial input\r\nexport const getSearchSuggestions = (products, searchTerm, maxSuggestions = 5) => {\r\n  if (!searchTerm || searchTerm.length < 2) return [];\r\n\r\n  const term = searchTerm.toLowerCase();\r\n  const suggestions = new Map();\r\n\r\n  products.forEach(product => {\r\n    // Check product name\r\n    const nameWords = product.name.toLowerCase().split(' ');\r\n    nameWords.forEach(word => {\r\n      if (word.startsWith(term) && word !== term) {\r\n        if (!suggestions.has(word)) {\r\n          suggestions.set(word, {\r\n            text: word,\r\n            type: 'product',\r\n            product: product\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // Check categories\r\n    if (product.category.toLowerCase().startsWith(term)) {\r\n      if (!suggestions.has(product.category)) {\r\n        suggestions.set(product.category, {\r\n          text: product.category,\r\n          type: 'category',\r\n          product: product\r\n        });\r\n      }\r\n    }\r\n  });\r\n\r\n  return Array.from(suggestions.values()).slice(0, maxSuggestions);\r\n};\r\n\r\n// Enhanced search function with fuzzy matching and scoring\r\nexport const searchProducts = (products, searchTerm, options = {}) => {\r\n  const {\r\n    fuzzy = true,\r\n    minScore = 10,\r\n    maxResults = 50,\r\n    sortByRelevance = true\r\n  } = options;\r\n\r\n  if (!searchTerm || searchTerm.trim().length === 0) {\r\n    return products;\r\n  }\r\n\r\n  const term = searchTerm.toLowerCase().trim();\r\n\r\n  // Filter products based on search criteria\r\n  let filteredProducts = products.filter(product => {\r\n    const score = calculateRelevanceScore(product, term);\r\n    return score >= minScore;\r\n  });\r\n\r\n  // Sort by relevance score if enabled\r\n  if (sortByRelevance) {\r\n    filteredProducts.sort((a, b) => {\r\n      const scoreA = calculateRelevanceScore(a, term);\r\n      const scoreB = calculateRelevanceScore(b, term);\r\n      return scoreB - scoreA;\r\n    });\r\n  }\r\n\r\n  return filteredProducts.slice(0, maxResults);\r\n};\r\n\r\n// Search history management\r\nexport const searchHistoryUtils = {\r\n  getHistory: () => {\r\n    try {\r\n      const history = localStorage.getItem('searchHistory');\r\n      return history ? JSON.parse(history) : [];\r\n    } catch (error) {\r\n      console.error('Error loading search history:', error);\r\n      return [];\r\n    }\r\n  },\r\n\r\n  addToHistory: (searchTerm) => {\r\n    try {\r\n      const history = searchHistoryUtils.getHistory();\r\n      const filteredHistory = history.filter(term => term !== searchTerm);\r\n      const updatedHistory = [searchTerm, ...filteredHistory].slice(0, 10); // Keep last 10 searches\r\n      localStorage.setItem('searchHistory', JSON.stringify(updatedHistory));\r\n      return updatedHistory;\r\n    } catch (error) {\r\n      console.error('Error saving search history:', error);\r\n      return [];\r\n    }\r\n  },\r\n\r\n  clearHistory: () => {\r\n    try {\r\n      localStorage.removeItem('searchHistory');\r\n    } catch (error) {\r\n      console.error('Error clearing search history:', error);\r\n    }\r\n  }\r\n};\r\n\r\n// Highlight search terms in text\r\nexport const highlightSearchTerm = (text, searchTerm) => {\r\n  if (!searchTerm || !text) return text;\r\n\r\n  const regex = new RegExp(`(${searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')})`, 'gi');\r\n  return text.replace(regex, '<mark class=\"bg-yellow-200 px-1 rounded\">$1</mark>');\r\n};\r\n\r\n// Get popular search terms (mock data for demo)\r\nexport const getPopularSearches = () => {\r\n  return [\r\n    'wireless headphones',\r\n    'smart watch',\r\n    'running shoes',\r\n    'casual shirt',\r\n    'gaming mouse',\r\n    'yoga mat',\r\n    'designer handbag',\r\n    'rose gold earrings'\r\n  ];\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}