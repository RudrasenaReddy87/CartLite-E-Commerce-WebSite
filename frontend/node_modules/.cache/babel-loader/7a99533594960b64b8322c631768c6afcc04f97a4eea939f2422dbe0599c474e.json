{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brudr\\\\Desktop\\\\anon-ecommerce-website-master\\\\CartLite-E-Commerce-WebSite\\\\frontend\\\\src\\\\context\\\\FavoritesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesContext = /*#__PURE__*/createContext();\n\n// Favorites reducer - now stores only IDs\nconst favoritesReducer = (state, action) => {\n  console.log('Reducer called with action:', action.type, 'payload:', action.payload);\n  console.log('Current state:', state);\n  switch (action.type) {\n    case 'SET_FAVORITES':\n      console.log('Setting favorites to:', action.payload);\n      return {\n        ...state,\n        itemIds: action.payload\n      };\n    case 'ADD_TO_FAVORITES':\n      const existingId = state.itemIds.find(id => id === action.payload);\n      if (existingId) {\n        console.log('ID already exists, not adding:', action.payload);\n        return state; // ID already exists\n      }\n      console.log('Adding ID to favorites:', action.payload);\n      return {\n        ...state,\n        itemIds: [...state.itemIds, action.payload]\n      };\n    case 'REMOVE_FROM_FAVORITES':\n      console.log('Removing ID from favorites:', action.payload);\n      const filteredIds = state.itemIds.filter(id => id !== action.payload);\n      console.log('Filtered IDs:', filteredIds);\n      return {\n        ...state,\n        itemIds: filteredIds\n      };\n    case 'CLEAR_FAVORITES':\n      console.log('Clearing all favorites');\n      return {\n        itemIds: []\n      };\n    default:\n      return state;\n  }\n};\n\n// Initial state\nconst initialState = {\n  itemIds: []\n};\nexport const FavoritesProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(favoritesReducer, initialState);\n\n  // Load favorites from localStorage on mount\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n    console.log('Loading favorites from localStorage:', savedFavorites);\n    if (savedFavorites) {\n      try {\n        const favoritesData = JSON.parse(savedFavorites);\n        console.log('Parsed favorites data:', favoritesData);\n        dispatch({\n          type: 'SET_FAVORITES',\n          payload: favoritesData\n        });\n      } catch (error) {\n        console.error('Error loading favorites from localStorage:', error);\n      }\n    } else {\n      console.log('No saved favorites found in localStorage');\n    }\n  }, []);\n\n  // Save favorites to localStorage whenever it changes\n  useEffect(() => {\n    console.log('Saving favorites to localStorage:', state.items);\n    localStorage.setItem('favorites', JSON.stringify(state.items));\n    console.log('Saved to localStorage successfully');\n  }, [state.items]);\n  const addToFavorites = product => {\n    dispatch({\n      type: 'ADD_TO_FAVORITES',\n      payload: product\n    });\n  };\n  const removeFromFavorites = productId => {\n    dispatch({\n      type: 'REMOVE_FROM_FAVORITES',\n      payload: {\n        id: productId\n      }\n    });\n  };\n  const removeFromFavoritesByProduct = product => {\n    dispatch({\n      type: 'REMOVE_FROM_FAVORITES',\n      payload: {\n        id: product.id\n      }\n    });\n  };\n  const clearFavorites = () => {\n    dispatch({\n      type: 'CLEAR_FAVORITES'\n    });\n  };\n  const isFavorite = productId => {\n    const result = state.items.some(item => item.id === productId);\n    console.log('isFavorite check for ID:', productId, 'Result:', result, 'Current items:', state.items);\n    return result;\n  };\n  const toggleFavorite = product => {\n    console.log('toggleFavorite called with:', product);\n    console.log('Current favorites:', state.items);\n    if (isFavorite(product.id)) {\n      console.log('Removing from favorites:', product.id);\n      removeFromFavorites(product.id);\n    } else {\n      console.log('Adding to favorites:', product);\n      addToFavorites(product);\n    }\n    console.log('Updated favorites:', state.items);\n  };\n  const value = {\n    ...state,\n    addToFavorites,\n    removeFromFavorites,\n    clearFavorites,\n    isFavorite,\n    toggleFavorite\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoritesProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = FavoritesProvider;\nexport const useFavorites = () => {\n  _s2();\n  const context = useContext(FavoritesContext);\n  if (!context) {\n    throw new Error('useFavorites must be used within a FavoritesProvider');\n  }\n  return context;\n};\n_s2(useFavorites, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"FavoritesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","FavoritesContext","favoritesReducer","state","action","console","log","type","payload","itemIds","existingId","find","id","filteredIds","filter","initialState","FavoritesProvider","children","_s","dispatch","savedFavorites","localStorage","getItem","favoritesData","JSON","parse","error","items","setItem","stringify","addToFavorites","product","removeFromFavorites","productId","removeFromFavoritesByProduct","clearFavorites","isFavorite","result","some","item","toggleFavorite","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavorites","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/brudr/Desktop/anon-ecommerce-website-master/CartLite-E-Commerce-WebSite/frontend/src/context/FavoritesContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\n\r\nconst FavoritesContext = createContext();\r\n\r\n// Favorites reducer - now stores only IDs\r\nconst favoritesReducer = (state, action) => {\r\n  console.log('Reducer called with action:', action.type, 'payload:', action.payload);\r\n  console.log('Current state:', state);\r\n\r\n  switch (action.type) {\r\n    case 'SET_FAVORITES':\r\n      console.log('Setting favorites to:', action.payload);\r\n      return {\r\n        ...state,\r\n        itemIds: action.payload\r\n      };\r\n    case 'ADD_TO_FAVORITES':\r\n      const existingId = state.itemIds.find(id => id === action.payload);\r\n      if (existingId) {\r\n        console.log('ID already exists, not adding:', action.payload);\r\n        return state; // ID already exists\r\n      }\r\n      console.log('Adding ID to favorites:', action.payload);\r\n      return {\r\n        ...state,\r\n        itemIds: [...state.itemIds, action.payload]\r\n      };\r\n    case 'REMOVE_FROM_FAVORITES':\r\n      console.log('Removing ID from favorites:', action.payload);\r\n      const filteredIds = state.itemIds.filter(id => id !== action.payload);\r\n      console.log('Filtered IDs:', filteredIds);\r\n      return {\r\n        ...state,\r\n        itemIds: filteredIds\r\n      };\r\n    case 'CLEAR_FAVORITES':\r\n      console.log('Clearing all favorites');\r\n      return {\r\n        itemIds: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  itemIds: []\r\n};\r\n\r\nexport const FavoritesProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(favoritesReducer, initialState);\r\n\r\n  // Load favorites from localStorage on mount\r\n  useEffect(() => {\r\n    const savedFavorites = localStorage.getItem('favorites');\r\n    console.log('Loading favorites from localStorage:', savedFavorites);\r\n    if (savedFavorites) {\r\n      try {\r\n        const favoritesData = JSON.parse(savedFavorites);\r\n        console.log('Parsed favorites data:', favoritesData);\r\n        dispatch({ type: 'SET_FAVORITES', payload: favoritesData });\r\n      } catch (error) {\r\n        console.error('Error loading favorites from localStorage:', error);\r\n      }\r\n    } else {\r\n      console.log('No saved favorites found in localStorage');\r\n    }\r\n  }, []);\r\n\r\n  // Save favorites to localStorage whenever it changes\r\n  useEffect(() => {\r\n    console.log('Saving favorites to localStorage:', state.items);\r\n    localStorage.setItem('favorites', JSON.stringify(state.items));\r\n    console.log('Saved to localStorage successfully');\r\n  }, [state.items]);\r\n\r\n  const addToFavorites = (product) => {\r\n    dispatch({ type: 'ADD_TO_FAVORITES', payload: product });\r\n  };\r\n\r\n  const removeFromFavorites = (productId) => {\r\n    dispatch({ type: 'REMOVE_FROM_FAVORITES', payload: { id: productId } });\r\n  };\r\n\r\n  const removeFromFavoritesByProduct = (product) => {\r\n    dispatch({ type: 'REMOVE_FROM_FAVORITES', payload: { id: product.id } });\r\n  };\r\n\r\n  const clearFavorites = () => {\r\n    dispatch({ type: 'CLEAR_FAVORITES' });\r\n  };\r\n\r\n  const isFavorite = (productId) => {\r\n    const result = state.items.some(item => item.id === productId);\r\n    console.log('isFavorite check for ID:', productId, 'Result:', result, 'Current items:', state.items);\r\n    return result;\r\n  };\r\n\r\n  const toggleFavorite = (product) => {\r\n    console.log('toggleFavorite called with:', product);\r\n    console.log('Current favorites:', state.items);\r\n\r\n    if (isFavorite(product.id)) {\r\n      console.log('Removing from favorites:', product.id);\r\n      removeFromFavorites(product.id);\r\n    } else {\r\n      console.log('Adding to favorites:', product);\r\n      addToFavorites(product);\r\n    }\r\n\r\n    console.log('Updated favorites:', state.items);\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    addToFavorites,\r\n    removeFromFavorites,\r\n    clearFavorites,\r\n    isFavorite,\r\n    toggleFavorite\r\n  };\r\n\r\n  return (\r\n    <FavoritesContext.Provider value={value}>\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFavorites = () => {\r\n  const context = useContext(FavoritesContext);\r\n  if (!context) {\r\n    throw new Error('useFavorites must be used within a FavoritesProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}